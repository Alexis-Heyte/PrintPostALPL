USE [PrintPostALPL]
GO
/****** Object:  StoredProcedure [dbo].[InsererCommandeAleatoire]    Script Date: 04/09/2024 13:41:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[InsererCommandeAleatoire]
AS
BEGIN
    -- Déclaration des variables pour les clés étrangères
    DECLARE @IdClient INT;
    DECLARE @IdFeuille INT;
    DECLARE @IdEncre INT;
    DECLARE @IdEnveloppe INT;
    DECLARE @IdAffranchissement INT;

    -- Générer des valeurs aléatoires pour les colonnes de la table Commande
    DECLARE @NbrCourriers SMALLINT = FLOOR(RAND() * (5000 - 1000 + 1)) + 1000; -- entre 1000 et 5000 courriers
    DECLARE @NbrFeuillets SMALLINT = FLOOR(RAND() * (5 - 1 + 1)) + 1; -- entre 1 et 5 feuillets
    DECLARE @DateCreation DATETIME2 = DATEADD(DAY, -FLOOR(RAND() * 30), GETDATE()); -- une date de création aléatoire dans les 30 derniers jours
    DECLARE @DateDepotSouhaite DATETIME2 = DATEADD(DAY, FLOOR(RAND() * 10), @DateCreation); -- date souhaitée entre 0 et 10 jours après la création

    -- Récupérer des Id aléatoires depuis les autres tables
    SET @IdClient = (SELECT TOP 1 IdClient FROM Client ORDER BY NEWID());
    SET @IdFeuille = (SELECT TOP 1 IdFeuille FROM Feuille ORDER BY NEWID());
    SET @IdEncre = (SELECT TOP 1 IdEncre FROM Encre ORDER BY NEWID());
    SET @IdEnveloppe = (SELECT TOP 1 IdEnveloppe FROM Enveloppe ORDER BY NEWID());
    SET @IdAffranchissement = (SELECT TOP 1 IdAffranchissement FROM Affranchissement ORDER BY NEWID());

    -- Récupération des prix pour le calcul du montant
    DECLARE @PrixFeuille DECIMAL(10,2) = (SELECT prix FROM Feuille WHERE IdFeuille = @IdFeuille);
    DECLARE @PrixEncre DECIMAL(10,2) = (SELECT prix FROM Encre WHERE IdEncre = @IdEncre);
    DECLARE @PrixEnveloppe DECIMAL(10,2) = (SELECT prix FROM Enveloppe WHERE IdEnveloppe = @IdEnveloppe);
    DECLARE @PrixAffranchissement DECIMAL(10,2) = (SELECT prix20gOuMoins FROM Affranchissement WHERE IdAffranchissement = @IdAffranchissement);

    -- Calcul des coûts individuels
    DECLARE @CoutFeuilles DECIMAL(18,2) = @NbrCourriers * @NbrFeuillets * @PrixFeuille / 1000;
    DECLARE @CoutEncre DECIMAL(18,2) = @NbrCourriers * @NbrFeuillets * @PrixEncre / 1000;
    DECLARE @CoutEnveloppe DECIMAL(18,2) = @NbrCourriers * @PrixEnveloppe / 1000;
    DECLARE @CoutAffranchissement DECIMAL(18,2) = @NbrCourriers * @PrixAffranchissement;

    -- Calcul du total sans marge
    DECLARE @CoutTotal DECIMAL(18,2) = @CoutFeuilles + @CoutEncre + @CoutEnveloppe + @CoutAffranchissement;

    -- Application de la marge de 20%
    DECLARE @Marge DECIMAL(18,2) = @CoutTotal * 0.20;
    DECLARE @MntDevise DECIMAL(18,2) = @CoutTotal + @Marge;

    -- Insertion de la commande avec le montant calculé
    INSERT INTO Commande (nbrCourriers, nbrFeuillets, dateCreation, dateDepotSouhaite, dateDepotReel, mntDevise, mntFacture, IdAffranchissement, IdEnveloppe, IdEncre, IdFeuille, IdClient)
    VALUES (@NbrCourriers, @NbrFeuillets, @DateCreation, @DateDepotSouhaite, NULL, @MntDevise, NULL, @IdAffranchissement, @IdEnveloppe, @IdEncre, @IdFeuille, @IdClient);
END;
